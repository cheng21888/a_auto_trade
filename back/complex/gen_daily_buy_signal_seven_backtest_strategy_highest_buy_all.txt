timestamp: 20231107200541
trade_count: 63620
total_profit: 1890255.0
size of result_df: 7185
ratio: 0.11293618359006602
average days_held: 9.05276642565231
average profit: 29.71164728072933
Source code for 'gen_signal_func':
def gen_daily_buy_signal_seven(data):
    """
    尾盘买入选股
    :param data:
    :return:
    """
    # Calculate the moving averages and other conditions
    data['M'] = data['收盘'].ewm(span=50, adjust=False).mean()
    data['N'] = (data['收盘'].rolling(window=5).mean() > data['收盘'].rolling(window=10).mean()) & \
                (data['收盘'].rolling(window=10).mean() > data['收盘'].rolling(window=20).mean())

    # Calculate the angle in degrees
    data['角度'] = np.arctan((data['M'] / data['M'].shift(1) - 1) * 100) * (180 / np.pi)
    data['均角'] = data['角度'].rolling(window=7).mean()

    data.loc[200:, 'Buy_Signal'] =(data['M'] > data['M'].shift(1)) & \
                  (data['收盘'] < data['收盘'].shift(1) * 0.97) & \
                  (data['最低'] <= data['M'] * 1.03) & \
                  (data['收盘'] >= data['M'] * 0.98) & \
                  (data['收盘'] == data['收盘'].rolling(window=3).min()) & \
                  (data['收盘'] > data['收盘'].shift(1) * 0.90) & \
                  (data['最高'] < (data['最高'].shift(1) + 0.07))






timestamp: 20231107200101
trade_count: 15076
total_profit: 500949.0
size of result_df: 1599
ratio: 0.10606261607853543
average days_held: 10.65421862563014
average profit: 33.22824356593261
Source code for 'gen_signal_func':
def gen_daily_buy_signal_seven(data):
    """
    尾盘买入选股
    :param data:
    :return:
    """
    # Calculate the moving averages and other conditions
    data['M'] = data['收盘'].ewm(span=50, adjust=False).mean()
    data['N'] = (data['收盘'].rolling(window=5).mean() > data['收盘'].rolling(window=10).mean()) & \
                (data['收盘'].rolling(window=10).mean() > data['收盘'].rolling(window=20).mean())

    # Calculate the angle in degrees
    data['角度'] = np.arctan((data['M'] / data['M'].shift(1) - 1) * 100) * (180 / np.pi)
    data['均角'] = data['角度'].rolling(window=7).mean()

    # Assuming 'finance_data' and 'dynainfo_data' are Series or columns in your DataFrame that correspond to FINANCE(7) and DYNAINFO(17)
    # data['FINANCE'] = finance_data
    # data['DYNAINFO'] = dynainfo_data

    # Define the main condition
    # You will need to replace `data['FINANCE']` and `data['DYNAINFO']` with your actual data
    data.loc[200:, 'Buy_Signal'] =(data['M'] > data['M'].shift(1)) & \
                  (data['均角'] >= 17.17) & \
                  (data['收盘'] < data['收盘'].shift(1) * 0.97) & \
                  (data['最低'] <= data['M'] * 1.03) & \
                  (data['收盘'] >= data['M'] * 0.98) & \
                  (data['收盘'] == data['收盘'].rolling(window=3).min()) & \
                  (data['收盘'] <= 30) & \
                  (data['收盘'] > data['收盘'].shift(1) * 0.90) & \
                  (data['最高'] < (data['最高'].shift(1) + 0.07)) & \
                  (data['收盘'] >= 4.618)






timestamp: 20231107195907
trade_count: 17148
total_profit: 563503.0
size of result_df: 1872
ratio: 0.10916724982505248
average days_held: 13.022976440401212
average profit: 32.861149988336834
Source code for 'gen_signal_func':
def gen_daily_buy_signal_seven(data):
    """
    尾盘买入选股
    :param data:
    :return:
    """
    # Calculate the moving averages and other conditions
    data['M'] = data['收盘'].ewm(span=50, adjust=False).mean()
    data['N'] = (data['收盘'].rolling(window=5).mean() > data['收盘'].rolling(window=10).mean()) & \
                (data['收盘'].rolling(window=10).mean() > data['收盘'].rolling(window=20).mean())

    # Calculate the angle in degrees
    data['角度'] = np.arctan((data['M'] / data['M'].shift(1) - 1) * 100) * (180 / np.pi)
    data['均角'] = data['角度'].rolling(window=7).mean()

    # Assuming 'finance_data' and 'dynainfo_data' are Series or columns in your DataFrame that correspond to FINANCE(7) and DYNAINFO(17)
    # data['FINANCE'] = finance_data
    # data['DYNAINFO'] = dynainfo_data

    # Define the main condition
    # You will need to replace `data['FINANCE']` and `data['DYNAINFO']` with your actual data
    data['Buy_Signal'] =(data['M'] > data['M'].shift(1)) & \
                  (data['均角'] >= 17.17) & \
                  (data['收盘'] < data['收盘'].shift(1) * 0.97) & \
                  (data['最低'] <= data['M'] * 1.03) & \
                  (data['收盘'] >= data['M'] * 0.98) & \
                  (data['收盘'] == data['收盘'].rolling(window=3).min()) & \
                  (data['收盘'] <= 30) & \
                  (data['收盘'] > data['收盘'].shift(1) * 0.90) & \
                  (data['最高'] < (data['最高'].shift(1) + 0.07)) & \
                  (data['收盘'] >= 4.618)






